{"version":3,"file":"src_app_pages_fotos_fotos_module_ts.js","mappings":"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","sources":["./src/app/components/mis-componentes.module.ts","./src/app/components/page-header/page-header.component.ts","./src/app/pages/fotos/fotos-routing.module.ts","./src/app/pages/fotos/fotos.module.ts","./src/app/pages/fotos/fotos.page.ts","./src/app/servicios/fotos.service.ts","./src/app/servicios/gestion-storage.service.ts","./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/@capacitor/filesystem/dist/esm/definitions.js","./node_modules/@capacitor/filesystem/dist/esm/index.js","./node_modules/@capacitor/preferences/dist/esm/index.js"],"sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PageHeaderComponent } from './page-header/page-header.component';\r\n\r\n// Incluimos el componente \"PageHeaderComponent\" y lo exportamos para que se pueda usar en otros m칩dulos\r\n// Se importa IonicModule. Se podr치 usar en todos los componentes de este m칩dulo\r\n@NgModule({\r\n  declarations: [PageHeaderComponent],\r\n  imports: [\r\n    CommonModule, IonicModule\r\n  ],\r\n  exports: [PageHeaderComponent]\r\n})\r\nexport class MisComponentesModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-header',\r\n  templateUrl: './page-header.component.html',\r\n  styleUrls: ['./page-header.component.scss'],\r\n})\r\nexport class PageHeaderComponent implements OnInit {\r\n\r\n  // Se define el atributo \"titulo\" como entrada de componente\r\n  // Se le asignar치 un valor al crear el componente con el selector \"app-page-header\"\r\n  @Input() titulo: string = \"\";\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FotosPage } from './fotos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FotosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FotosPageRoutingModule {}\n","import { MisComponentesModule } from './../../components/mis-componentes.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FotosPageRoutingModule } from './fotos-routing.module';\n\nimport { FotosPage } from './fotos.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FotosPageRoutingModule,\n    MisComponentesModule\n  ],\n  declarations: [FotosPage]\n})\nexport class FotosPageModule {}\n","import { FotosService } from './../../servicios/fotos.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fotos',\n  templateUrl: './fotos.page.html',\n  styleUrls: ['./fotos.page.scss'],\n})\nexport class FotosPage implements OnInit {\n\n  constructor(public usarCamara: FotosService) { }\n\n  ngOnInit() {\n  }\n\n  public takePicture() {\n    this.usarCamara.sacarFoto();\n  }\n}\n","import { IFoto } from '../interfaces/mis-interfaces';\nimport { GestionStorageService } from './gestion-storage.service';\nimport { Camera, CameraResultType, CameraSource, ImageOptions, Photo } from '@capacitor/camera';\nimport { Injectable } from '@angular/core';\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FotosService {\n  // Array para almacenar las rutas de cada foto\n  public accesoFotos: IFoto[] = [];\n\n  // Carga las im치genes que tenemos almacenadas\n  constructor(private usarStorage: GestionStorageService, private plataforma: Platform) {\n    this.loadSaved();\n  }\n\n  // Devuelve el array para poderlo utilizar en un componente\n  public getFotos() {\n    return this.accesoFotos;\n  }\n\n  // Recupera las im치genes que hay almacenadas en el disco duro\n  private async loadSaved() {\n    // Recupera los datos de Storage en formato string\n    const photoList = await this.usarStorage.getObject(\"fotos\");\n\n    // Lo parsea a un array de objetos IFoto y lo almacena en el atributo accesoFotos\n    // Si no obtiene datos inicializar치 el array para poder empezar a almacenar fotos.\n    this.accesoFotos = JSON.parse(photoList.value) || [];\n    console.log(photoList);\n    \n    // En los navegadores debemos cargar las im치genes en formato base64 para que se visualicen correctamente\n    if (!this.plataforma.is(\"hybrid\")) {\n      // Lee los datos de cada foto guardada en el sistema de archivos\n      for (let photo of this.accesoFotos) {\n        const readFile = await Filesystem.readFile({\n            path: photo.filepath,\n            directory: Directory.Data\n        });\n\n        // Plataforma web solamente: Guardar la foto en base64 para que se pueda visualizar\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  // Define las caracter칤sticas de la foto y la saca\n  public async sacarFoto() {\n    // Definir caracter칤sticas de la foto\n    let caracteristicasFoto: ImageOptions = {\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    };\n    const foto: Photo = await Camera.getPhoto(caracteristicasFoto);\n    console.log(foto);\n\n    // Se obtiene la URL y se a침ade al principio del array\n    // let UrlFoto: string = foto.webPath;\n    // this.urlFotos.unshift(UrlFoto);\n\n    // En los dispositivos m칩viles las fotos se guardan por defecto y tenemos el path f칤sico y el webpath para visualizar\n    // En el navegador hay que guardar la imagen en un fichero y se almacena su path y su URL en el array\n    let imagenGuardada: any;\n\n    if (!this.plataforma.is(\"hybrid\")) {\n      imagenGuardada = await this.savePicture(foto);\n    } else {\n      // Guarda las rutas de acceso a la foto\n      imagenGuardada = {\n        filepath: foto.path,\n        webviewPath: foto.webPath\n      };\n    }\n    this.accesoFotos.unshift(imagenGuardada);\n    console.log(imagenGuardada);\n\n\n    // Almacenamos los datos de las fotos en Storage\n    this.usarStorage.setObject(\"fotos\", this.accesoFotos);\n\n\n  }\n\n  // Se almacena la imagen en el sistema de ficheros\n  // Solo para el navegador\n  private async savePicture(cameraPhoto: Photo) {\n   \n    // Convierte la foto al formato base64, exigido por la API del sistema de ficheros\n    const base64Data = await this.readAsBase64(cameraPhoto);\n  \n    // Guarda el fichero\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: Directory.Data   // Los datos se borrarn al desinstalar la aplicaci칩n\n    });\n\n    console.log(savedFile);\n\n    // Crea y devuelve un objeto IFoto\n    return {\n      filepath: fileName,\n      webviewPath: cameraPhoto.webPath\n    };\n  }\n\n  // Devuelve la imagen en formato base64 para trabajar en los navegadores\n  // Recupera la imagen como blob y la convierte a base64\n  private async readAsBase64(foto: Photo) {\n    const response = await fetch(foto.webPath!);\n    const blob = await response.blob();\n    const base64 = await this.convertBlobToBase64(blob) as string;\n    return base64;\n  }\n  \n  // Conviete una imagen en formato blob a formato base 64\n  private convertBlobToBase64(blob: Blob) {\n    let promesa = new Promise( function(resolve, reject) {\n      const reader = new FileReader;\n      reader.onerror = reject;\n      reader.onload = () => {\n          resolve(reader.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n\n    return promesa;\n  }\n  \n  // Here's an example of reading a file with a full file path. Use this to\n  // read binary data (base64 encoded) from plugins that return File URIs, such as\n  // the Camera.\n  private async readFilePath() {\n    const contents = await Filesystem.readFile({\n      path: 'file:///var/mobile/Containers/Data/Application/22A433FD-D82D-4989-8BE6-9FC49DEA20BB/Documents/text.txt'\n    });\n\n    console.log('data:', contents);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GestionStorageService {\n\n  constructor() {}\n\n  // Almacena una cadena de caracteres. Para cada string se necesita un identificador (key) y su valor (value)\n  // Mediante await se indica que es un m칠todo as칤ncrono que devuelve una promesa\n  async setString(key: string, value: string) {\n    await Preferences.set({ key, value });\n  }\n  \n  // A partir de su clave identificadora (key) obtiene el valor de una cadena de caracteres almacenada en local\n  async getString(key: string): Promise<{ value: any }> {\n    return await Preferences.get({ key });\n  }\n  \n  // Almacena un objeto con formato JSON en local.\n  // Por cada objeto, se necesita una clave (key) y el valor del objeto (value)\n  async setObject(key: string, value: any) {\n    await Preferences.set({ key, value: JSON.stringify(value) });\n  }\n  \n  // A partir de su clave obtiene un objeto almacenado en local\n  // Antes de devolverlo, debe ser convertido de formato JSON a formato normal\n  async getObject(key: string): Promise<{ value: string }> {\n    const ret: any = await Preferences.get({ key });\n    return ret;\n  }\n  \n  // Dada su clave, elimina un elemento almacenado en local independientemente de su tipo\n  async removeItem(key: string) {\n    await Preferences.remove({ key });\n  }\n  \n  // Vac칤a el almacenamiento local\n  async clear() {\n    await Preferences.clear();\n  }\n}\n","export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n","export var Directory;\n(function (Directory) {\n    /**\n     * The Documents directory\n     * On iOS it's the app's documents directory.\n     * Use this directory to store user-generated content.\n     * On Android it's the Public Documents folder, so it's accessible from other apps.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Documents\"] = \"DOCUMENTS\";\n    /**\n     * The Data directory\n     * On iOS it will use the Documents directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Data\"] = \"DATA\";\n    /**\n     * The Library directory\n     * On iOS it will use the Library directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.1.0\n     */\n    Directory[\"Library\"] = \"LIBRARY\";\n    /**\n     * The Cache directory\n     * Can be deleted in cases of low memory, so use this directory to write app-specific files\n     * that your app can re-create easily.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Cache\"] = \"CACHE\";\n    /**\n     * The external directory\n     * On iOS it will use the Documents directory\n     * On Android it's the directory on the primary shared/external\n     * storage device where the application can place persistent files it owns.\n     * These files are internal to the applications, and not typically visible\n     * to the user as media.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"External\"] = \"EXTERNAL\";\n    /**\n     * The external storage directory\n     * On iOS it will use the Documents directory\n     * On Android it's the primary shared/external storage directory.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\n})(Directory || (Directory = {}));\nexport var Encoding;\n(function (Encoding) {\n    /**\n     * Eight-bit UCS Transformation Format\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF8\"] = \"utf8\";\n    /**\n     * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the\n     * Unicode character set\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"ASCII\"] = \"ascii\";\n    /**\n     * Sixteen-bit UCS Transformation Format, byte order identified by an\n     * optional byte-order mark\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF16\"] = \"utf16\";\n})(Encoding || (Encoding = {}));\n/**\n * @deprecated Use `Directory`.\n * @since 1.0.0\n */\nexport const FilesystemDirectory = Directory;\n/**\n * @deprecated Use `Encoding`.\n * @since 1.0.0\n */\nexport const FilesystemEncoding = Encoding;\n","import { registerPlugin } from '@capacitor/core';\nconst Filesystem = registerPlugin('Filesystem', {\n    web: () => import('./web').then(m => new m.FilesystemWeb()),\n});\nexport * from './definitions';\nexport { Filesystem };\n","import { registerPlugin } from '@capacitor/core';\nconst Preferences = registerPlugin('Preferences', {\n    web: () => import('./web').then(m => new m.PreferencesWeb()),\n});\nexport * from './definitions';\nexport { Preferences };\n"],"names":["CameraSource","CameraDirection","CameraResultType","registerPlugin","Camera","web","then","m","CameraWeb","Directory","Encoding","FilesystemDirectory","FilesystemEncoding","Filesystem","FilesystemWeb","Preferences","PreferencesWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[7,8,9,10,11]}
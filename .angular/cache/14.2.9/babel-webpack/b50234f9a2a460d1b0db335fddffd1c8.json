{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yeray/Desktop/Modulo3/PMDM/PMDM03/PMDM03T1/pmdm03-ejemplo2022-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nconst NAMESPACE = 'ionicpwaelements';\nlet queueCongestion = 0;\nlet queuePending = false;\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst CSS = win.CSS;\nconst doc = win.document || {\n  head: {}\n};\nconst plt = {\n  $flags$: 0,\n  $resourcesUrl$: '',\n  jmp: h => h(),\n  raf: h => requestAnimationFrame(h),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts)\n};\n\nconst supportsShadowDom = /*@__PURE__*/(() => (doc.head.attachShadow + '').indexOf('[native') > -1)();\n\nconst promiseResolve = v => Promise.resolve(v);\n\nconst supportsConstructibleStylesheets = /*@__PURE__*/(() => {\n  try {\n    new CSSStyleSheet();\n    return true;\n  } catch (e) {}\n\n  return false;\n})();\n\nconst Context = {};\nconst hostRefs = new WeakMap();\n\nconst getHostRef = ref => hostRefs.get(ref);\n\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n\nconst registerHost = elm => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: elm,\n    $instanceValues$: new Map()\n  };\n  {\n    hostRef.$onInstancePromise$ = new Promise(r => hostRef.$onInstanceResolve$ = r);\n  }\n  {\n    hostRef.$onReadyPromise$ = new Promise(r => hostRef.$onReadyResolve$ = r);\n    elm['s-p'] = [];\n    elm['s-rc'] = [];\n  }\n  return hostRefs.set(elm, hostRef);\n};\n\nconst isMemberInElement = (elm, memberName) => memberName in elm;\n\nconst consoleError = e => console.error(e);\n\nconst moduleCache = /*@__PURE__*/new Map();\n\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  // loadModuleImport\n  const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n  const bundleId = cmpMeta.$lazyBundleIds$;\n  const module = moduleCache.get(bundleId);\n\n  if (module) {\n    return module[exportName];\n  }\n\n  return import(\n  /* webpackInclude: /\\.entry\\.js$/ */\n\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n\n  /* webpackMode: \"lazy\" */\n  `./${bundleId}.entry.js${''}`).then(importedModule => {\n    {\n      moduleCache.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\n\nconst queueTask = (queue, write) => cb => {\n  queue.push(cb);\n\n  if (!queuePending) {\n    queuePending = true;\n\n    if (write && plt.$flags$ & 4\n    /* queueSync */\n    ) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\n\nconst consume = queue => {\n  for (let i = 0; i < queue.length; i++) {\n    try {\n      queue[i](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  queue.length = 0;\n};\n\nconst consumeTimeout = (queue, timeout) => {\n  let i = 0;\n  let ts = 0;\n\n  while (i < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  if (i === queue.length) {\n    queue.length = 0;\n  } else if (i !== 0) {\n    queue.splice(0, i);\n  }\n};\n\nconst flush = () => {\n  queueCongestion++; // always force a bunch of medium callbacks to run, but still have\n  // a throttle on how many can run in a certain time\n  // DOM READS!!!\n\n  consume(queueDomReads);\n  const timeout = (plt.$flags$ & 6\n  /* queueMask */\n  ) === 2\n  /* appLoaded */\n  ? performance.now() + 10 * Math.ceil(queueCongestion * (1.0 / 22.0)) : Infinity; // DOM WRITES!!!\n\n  consumeTimeout(queueDomWrites, timeout);\n  consumeTimeout(queueDomWritesLow, timeout);\n\n  if (queueDomWrites.length > 0) {\n    queueDomWritesLow.push(...queueDomWrites);\n    queueDomWrites.length = 0;\n  }\n\n  if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n    // still more to do yet, but we've run out of time\n    // let's let this thing cool off and try again in the next tick\n    plt.raf(flush);\n  } else {\n    queueCongestion = 0;\n  }\n};\n\nconst nextTick = /*@__PURE__*/cb => promiseResolve().then(cb);\n\nconst readTask = /*@__PURE__*/queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/queueTask(queueDomWrites, true);\n/**\n * Default style mode id\n */\n\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\n\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\n\nconst isDef = v => v != null;\n\nconst isComplexType = o => {\n  // https://jsperf.com/typeof-fn-object/5\n  o = typeof o;\n  return o === 'object' || o === 'function';\n};\n\nconst getDynamicImportFunction = namespace => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\n\nconst patchEsm = () => {\n  // @ts-ignore\n  if (!(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n    // @ts-ignore\n    return import(\n    /* webpackChunkName: \"stencil-polyfills-css-shim\" */\n    './css-shim-8775d9ad-556f0cc2.js').then(() => {\n      if (plt.$cssShim$ = win.__cssshim) {\n        return plt.$cssShim$.i();\n      } else {\n        // for better minification\n        return 0;\n      }\n    });\n  }\n\n  return promiseResolve();\n};\n\nconst patchBrowser = () => {\n  {\n    // shim css vars\n    plt.$cssShim$ = win.__cssshim;\n  } // @ts-ignore\n\n  const scriptElm = Array.from(doc.querySelectorAll('script')).find(s => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) || s.getAttribute('data-stencil-namespace') === NAMESPACE);\n  const opts = {};\n\n  if ('onbeforeload' in scriptElm && !history.scrollRestoration\n  /* IS_ESM_BUILD */\n  ) {\n    // Safari < v11 support: This IF is true if it's Safari below v11.\n    // This fn cannot use async/await since Safari didn't support it until v11,\n    // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n    // so both the ESM file and nomodule file would get downloaded. Only Safari\n    // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n    // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n    // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n    return {\n      then() {}\n\n    };\n  }\n\n  {\n    opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n    patchDynamicImport(opts.resourcesUrl, scriptElm);\n\n    if (!win.customElements) {\n      // module support, but no custom elements support (Old Edge)\n      // @ts-ignore\n      return import(\n      /* webpackChunkName: \"stencil-polyfills-dom\" */\n      './dom-76cc7c7d-0a082895.js').then(() => opts);\n    }\n  }\n  return promiseResolve(opts);\n};\n\nconst patchDynamicImport = (base, orgScriptElm) => {\n  const importFunctionName = getDynamicImportFunction(NAMESPACE);\n\n  try {\n    // test if this browser supports dynamic imports\n    // There is a caching issue in V8, that breaks using import() in Function\n    // By generating a random string, we can workaround it\n    // Check https://bugs.chromium.org/p/v8/issues/detail?id=9558 for more info\n    win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n  } catch (e) {\n    // this shim is specifically for browsers that do support \"esm\" imports\n    // however, they do NOT support \"dynamic\" imports\n    // basically this code is for old Edge, v18 and below\n    const moduleMap = new Map();\n\n    win[importFunctionName] = src => {\n      const url = new URL(src, base).href;\n      let mod = moduleMap.get(url);\n\n      if (!mod) {\n        const script = doc.createElement('script');\n        script.type = 'module';\n        script.crossOrigin = orgScriptElm.crossOrigin;\n        script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n          type: 'application/javascript'\n        }));\n        mod = new Promise(resolve => {\n          script.onload = () => {\n            resolve(win[importFunctionName].m);\n            script.remove();\n          };\n        });\n        moduleMap.set(url, mod);\n        doc.head.appendChild(script);\n      }\n\n      return mod;\n    };\n  }\n};\n\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\n\nconst createTime = (fnName, tagName = '') => {\n  {\n    return () => {\n      return;\n    };\n  }\n};\n\nconst uniqueTime = (key, measureText) => {\n  {\n    return () => {\n      return;\n    };\n  }\n};\n\nconst rootAppliedStyles = new WeakMap();\n\nconst registerStyle = (scopeId, cssText, allowCS) => {\n  let style = styles.get(scopeId);\n\n  if (supportsConstructibleStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    style.replace(cssText);\n  } else {\n    style = cssText;\n  }\n\n  styles.set(scopeId, style);\n};\n\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n  let scopeId = getScopeId(cmpMeta.$tagName$);\n  let style = styles.get(scopeId); // if an element is NOT connected then getRootNode() will return the wrong root node\n  // so the fallback is to always use the document for the root node in those cases\n\n  styleContainerNode = styleContainerNode.nodeType === 11\n  /* DocumentFragment */\n  ? styleContainerNode : doc;\n\n  if (style) {\n    if (typeof style === 'string') {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n      }\n\n      if (!appliedStyles.has(scopeId)) {\n        {\n          if (plt.$cssShim$) {\n            styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10\n            /* needsScopedEncapsulation */\n            ));\n            const newScopeId = styleElm['s-sc'];\n\n            if (newScopeId) {\n              scopeId = newScopeId; // we don't want to add this styleID to the appliedStyles Set\n              // since the cssVarShim might need to apply several different\n              // stylesheets for the same component\n\n              appliedStyles = null;\n            }\n          } else {\n            styleElm = doc.createElement('style');\n            styleElm.innerHTML = style;\n          }\n\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n        }\n\n        if (appliedStyles) {\n          appliedStyles.add(scopeId);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n\n  return scopeId;\n};\n\nconst attachStyles = (elm, cmpMeta, mode) => {\n  const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n  const scopeId = addStyle(supportsShadowDom && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, mode, elm);\n\n  if (cmpMeta.$flags$ & 10\n  /* needsScopedEncapsulation */\n  ) {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    // DOM WRITE!!\n    elm['s-sc'] = scopeId;\n    elm.classList.add(scopeId + '-h');\n  }\n\n  endAttachStyles();\n};\n\nconst getScopeId = (tagName, mode) => 'sc-' + tagName;\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\n\n\nconst h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let simple = false;\n  let lastSimple = false;\n  let vNodeChildren = [];\n\n  const walk = c => {\n    for (let i = 0; i < c.length; i++) {\n      child = c[i];\n\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== 'boolean') {\n        if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n          child = String(child);\n        }\n\n        if (simple && lastSimple) {\n          // If the previous child was simple (string), we merge both\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          // Append a new vNode, if it's text, we create a text vNode\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n\n        lastSimple = simple;\n      }\n    }\n  };\n\n  walk(children);\n\n  if (vnodeData) {\n    {\n      const classData = vnodeData.className || vnodeData.class;\n\n      if (classData) {\n        vnodeData.class = typeof classData !== 'object' ? classData : Object.keys(classData).filter(k => classData[k]).join(' ');\n      }\n    }\n  }\n\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n\n  return vnode;\n};\n\nconst newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  return vnode;\n};\n\nconst Host = {};\n\nconst isHost = node => node && node.$tag$ === Host;\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n\n\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n\n    if (memberName === 'class') {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n    } else if (memberName === 'style') {\n      // update style attribute, css properties and values\n      {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes('-')) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = '';\n            }\n          }\n        }\n      }\n\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (prop.includes('-')) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (memberName === 'ref') {\n      // minifier will clean this up\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {\n      // Event Handlers\n      // so if the member name starts with \"on\" and the 3rd characters is\n      // a capital letter, and it's not already a member on the element,\n      // then we're assuming it's an event listener\n      if (memberName[2] === '-') {\n        // on- prefixed events\n        // allows to be explicit about the dom event to listen without any magic\n        // under the hood:\n        // <my-cmp on-click> // listens for \"click\"\n        // <my-cmp on-Click> // listens for \"Click\"\n        // <my-cmp on-ionChange> // listens for \"ionChange\"\n        // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        // standard event\n        // the JSX attribute could have been \"onMouseOver\" and the\n        // member name \"onmouseover\" is on the window's prototype\n        // so let's add the listener \"mouseover\", which is all lowercased\n        memberName = ln.slice(2);\n      } else {\n        // custom event\n        // the JSX attribute could have been \"onMyCustomEvent\"\n        // so let's trim off the \"on\" prefix and lowercase the first character\n        // and add the listener \"myCustomEvent\"\n        // except for the first character, we keep the event name case\n        memberName = ln[2] + memberName.slice(3);\n      }\n\n      if (oldValue) {\n        plt.rel(elm, memberName, oldValue, false);\n      }\n\n      if (newValue) {\n        plt.ael(elm, memberName, newValue, false);\n      }\n    } else {\n      // Set property if it exists and it's not a SVG\n      const isComplex = isComplexType(newValue);\n\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes('-')) {\n            let n = newValue == null ? '' : newValue; // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n\n            if (memberName === 'list') {\n              isProp = false; // tslint:disable-next-line: triple-equals\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n\n      if (newValue == null || newValue === false) {\n        {\n          elm.removeAttribute(memberName);\n        }\n      } else if ((!isProp || flags & 4\n      /* isHost */\n      || isSvg) && !isComplex) {\n        newValue = newValue === true ? '' : newValue;\n        {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\n\nconst parseClassListRegex = /\\s/;\n\nconst parseClassList = value => !value ? [] : value.split(parseClassListRegex);\n\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n  // if the element passed in is a shadow root, which is a document fragment\n  // then we want to be adding attrs/props to the shadow root's \"host\" element\n  // if it's not a shadow root, then we add attrs/props to the same element\n  const elm = newVnode.$elm$.nodeType === 11\n  /* DocumentFragment */\n  && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    // remove attributes no longer present on the vnode by setting them to undefined\n    for (memberName in oldVnodeAttrs) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n      }\n    }\n  } // add new & update changed attributes\n\n  for (memberName in newVnodeAttrs) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n  }\n};\n\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  // tslint:disable-next-line: prefer-const\n  let newVNode = newParentVNode.$children$[childIndex];\n  let i = 0;\n  let elm;\n  let childNode;\n\n  if (newVNode.$text$ !== null) {\n    // create text node\n    elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n  } else {\n    if (!isSvgMode) {\n      isSvgMode = newVNode.$tag$ === 'svg';\n    } // create element\n\n\n    elm = newVNode.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$tag$);\n\n    if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n      isSvgMode = false;\n    } // add css classes, attrs, props, listeners, etc.\n\n\n    {\n      updateElement(null, newVNode, isSvgMode);\n    }\n\n    if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n      // if there is a scopeId and this is the initial render\n      // then let's add the scopeId as a css class\n      elm.classList.add(elm['s-si'] = scopeId);\n    }\n\n    if (newVNode.$children$) {\n      for (i = 0; i < newVNode.$children$.length; ++i) {\n        // create the node\n        childNode = createElm(oldParentVNode, newVNode, i); // return node could have been null\n\n        if (childNode) {\n          // append our new node\n          elm.appendChild(childNode);\n        }\n      }\n    }\n\n    {\n      if (newVNode.$tag$ === 'svg') {\n        // Only reset the SVG context when we're exiting <svg> element\n        isSvgMode = false;\n      } else if (elm.tagName === 'foreignObject') {\n        // Reenter SVG context when we're exiting <foreignObject> element\n        isSvgMode = true;\n      }\n    }\n  }\n\n  return elm;\n};\n\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = parentElm;\n  let childNode;\n\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx);\n\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, before);\n      }\n    }\n  }\n};\n\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnode = vnodes[startIdx]) {\n      elm = vnode.$elm$;\n      callNodeRefs(vnode); // remove the vnode's element from the dom\n\n      elm.remove();\n    }\n  }\n};\n\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      // Vnode might have been moved left\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patch(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      patch(oldStartVnode, newEndVnode);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      patch(oldEndVnode, newStartVnode);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      {\n        // new element\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n        newStartVnode = newCh[++newStartIdx];\n      }\n\n      if (node) {\n        {\n          oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\n\nconst isSameVnode = (vnode1, vnode2) => {\n  // compare if two vnode to see if they're \"technically\" the same\n  // need to have the same element tag, and same key to be the same\n  if (vnode1.$tag$ === vnode2.$tag$) {\n    return true;\n  }\n\n  return false;\n};\n\nconst patch = (oldVNode, newVNode) => {\n  const elm = newVNode.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode.$children$;\n  const tag = newVNode.$tag$;\n  const text = newVNode.$text$;\n\n  if (text === null) {\n    {\n      // test if we're rendering an svg element, or still rendering nodes inside of one\n      // only add this to the when the compiler sees we're using an svg somewhere\n      isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n    } // element node\n\n    {\n      {\n        // either this is the first render of an element OR it's an update\n        // AND we already know it's possible it could have changed\n        // this updates the element's css classes, attrs, props, listeners, etc.\n        updateElement(oldVNode, newVNode, isSvgMode);\n      }\n    }\n\n    if (oldChildren !== null && newChildren !== null) {\n      // looks like there's child vnodes for both the old and new vnodes\n      updateChildren(elm, oldChildren, newVNode, newChildren);\n    } else if (newChildren !== null) {\n      // no old child vnodes, but there are new child vnodes to add\n      if (oldVNode.$text$ !== null) {\n        // the old vnode was text, so be sure to clear it out\n        elm.textContent = '';\n      } // add the new vnode children\n\n\n      addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      // no new child vnodes, but there are old child vnodes to remove\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n\n    if (isSvgMode && tag === 'svg') {\n      isSvgMode = false;\n    }\n  } else if (oldVNode.$text$ !== text) {\n    // update the text content for the text only vnode\n    // and also only if the text is different than before\n    elm.data = text;\n  }\n};\n\nconst callNodeRefs = vNode => {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.forEach(callNodeRefs);\n  }\n};\n\nconst renderVdom = (hostElm, hostRef, cmpMeta, renderFnResults) => {\n  hostTagName = hostElm.tagName;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4\n  /* isHost */\n  ;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm['s-sc'];\n  } // synchronous patch\n\n  patch(oldVNode, rootVnode);\n};\n\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n  if (ancestorComponent && !hostRef.$onRenderResolve$) {\n    ancestorComponent['s-p'].push(new Promise(r => hostRef.$onRenderResolve$ = r));\n  }\n};\n\nconst scheduleUpdate = (elm, hostRef, cmpMeta, isInitialLoad) => {\n  {\n    hostRef.$flags$ |= 16\n    /* isQueuedForUpdate */\n    ;\n  }\n\n  if (hostRef.$flags$ & 4\n  /* isWaitingForChildren */\n  ) {\n    hostRef.$flags$ |= 512\n    /* needsRerender */\n    ;\n    return;\n  }\n\n  const endSchedule = createTime('scheduleUpdate', cmpMeta.$tagName$);\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const instance = hostRef.$lazyInstance$;\n\n  const update = () => updateComponent(elm, hostRef, cmpMeta, instance, isInitialLoad);\n\n  attachToAncestor(hostRef, ancestorComponent);\n  let promise;\n\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256\n      /* isListenReady */\n      ;\n\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.forEach(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = null;\n      }\n    }\n  }\n\n  endSchedule(); // there is no ancestorc omponent or the ancestor component\n  // has already fired off its lifecycle update then\n  // fire off the initial update\n\n  return then(promise, () => writeTask(update));\n};\n\nconst updateComponent = (elm, hostRef, cmpMeta, instance, isInitialLoad) => {\n  // updateComponent\n  const endUpdate = createTime('update', cmpMeta.$tagName$);\n  const rc = elm['s-rc'];\n\n  if (isInitialLoad) {\n    // DOM WRITE!\n    attachStyles(elm, cmpMeta, hostRef.$modeName$);\n  }\n\n  const endRender = createTime('render', cmpMeta.$tagName$);\n  {\n    {\n      // looks like we've got child nodes to render into this host element\n      // or we need to update the css class/attrs on the host element\n      // DOM WRITE!\n      renderVdom(elm, hostRef, cmpMeta, callRender(instance));\n    }\n  }\n\n  if (plt.$cssShim$) {\n    plt.$cssShim$.updateHost(elm);\n  }\n\n  {\n    hostRef.$flags$ &= ~16\n    /* isQueuedForUpdate */\n    ;\n  }\n  {\n    hostRef.$flags$ |= 2\n    /* hasRendered */\n    ;\n  }\n\n  if (rc) {\n    // ok, so turns out there are some child host elements\n    // waiting on this parent element to load\n    // let's fire off all update callbacks waiting\n    rc.forEach(cb => cb());\n    elm['s-rc'] = undefined;\n  }\n\n  endRender();\n  endUpdate();\n  {\n    const childrenPromises = elm['s-p'];\n\n    const postUpdate = () => postUpdateComponent(elm, hostRef, cmpMeta);\n\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4\n      /* isWaitingForChildren */\n      ;\n      childrenPromises.length = 0;\n    }\n  }\n};\n\nconst callRender = (instance, elm) => {\n  try {\n    instance = instance.render();\n  } catch (e) {\n    consoleError(e);\n  }\n\n  return instance;\n};\n\nconst postUpdateComponent = (elm, hostRef, cmpMeta) => {\n  const endPostUpdate = createTime('postUpdate', cmpMeta.$tagName$);\n  const instance = hostRef.$lazyInstance$;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n\n  if (!(hostRef.$flags$ & 64\n  /* hasLoadedComponent */\n  )) {\n    hostRef.$flags$ |= 64\n    /* hasLoadedComponent */\n    ;\n    {\n      // DOM WRITE!\n      addHydratedFlag(elm);\n    }\n    {\n      safeCall(instance, 'componentDidLoad');\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    endPostUpdate();\n  }\n\n  {\n    hostRef.$onInstanceResolve$(elm);\n  } // load events fire from bottom to top\n  // the deepest elements load first then bubbles up\n\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = undefined;\n    }\n\n    if (hostRef.$flags$ & 512\n    /* needsRerender */\n    ) {\n      nextTick(() => scheduleUpdate(elm, hostRef, cmpMeta, false));\n    }\n\n    hostRef.$flags$ &= ~(4\n    /* isWaitingForChildren */\n    | 512\n    /* needsRerender */\n    );\n  } // ( •_•)\n  // ( •_•)>⌐■-■\n  // (⌐■_■)\n};\n\nconst forceUpdate = (elm, cmpMeta) => {\n  {\n    const hostRef = getHostRef(elm);\n    const isConnected = hostRef.$hostElement$.isConnected;\n\n    if (isConnected && (hostRef.$flags$ & (2\n    /* hasRendered */\n    | 16\n    /* isQueuedForUpdate */\n    )) === 2\n    /* hasRendered */\n    ) {\n      scheduleUpdate(elm, hostRef, cmpMeta, false);\n    } // Returns \"true\" when the forced update was successfully scheduled\n\n\n    return isConnected;\n  }\n};\n\nconst appDidLoad = who => {\n  // on appload\n  // we have finish the first big initial render\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  {\n    plt.$flags$ |= 2\n    /* appLoaded */\n    ;\n  }\n};\n\nconst safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  return undefined;\n};\n\nconst then = (promise, thenFn) => {\n  return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\n\nconst addHydratedFlag = elm => elm.classList.add('hydrated');\n\nconst addEventListeners = (elm, hostRef, listeners) => {\n  hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || [];\n  const removeFns = listeners.map(([flags, name, method]) => {\n    const target = getHostListenerTarget(elm, flags);\n    const handler = hostListenerProxy(hostRef, method);\n    const opts = hostListenerOpts(flags);\n    plt.ael(target, name, handler, opts);\n    return () => plt.rel(target, name, handler, opts);\n  });\n  return () => removeFns.forEach(fn => fn());\n};\n\nconst hostListenerProxy = (hostRef, methodName) => {\n  return ev => {\n    {\n      if (hostRef.$flags$ & 256\n      /* isListenReady */\n      ) {\n        // instance is ready, let's call it's member method for this event\n        hostRef.$lazyInstance$[methodName](ev);\n      } else {\n        hostRef.$queuedListeners$.push([methodName, ev]);\n      }\n    }\n  };\n};\n\nconst getHostListenerTarget = (elm, flags) => {\n  if (flags & 32\n  /* TargetBody */\n  ) return doc.body;\n  return elm;\n};\n\nconst hostListenerOpts = flags => (flags & 2\n/* Capture */\n) !== 0;\n\nconst parsePropertyValue = (propValue, propType) => {\n  // ensure this value is of the correct prop type\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4\n    /* Boolean */\n    ) {\n      // per the HTML spec, any string value means it is a boolean true value\n      // but we'll cheat here and say that the string \"false\" is the boolean false\n      return propValue === 'false' ? false : propValue === '' || !!propValue;\n    }\n\n    if (propType & 2\n    /* Number */\n    ) {\n      // force it to be a number\n      return parseFloat(propValue);\n    }\n\n    if (propType & 1\n    /* String */\n    ) {\n      // could have been passed as a number or boolean\n      // but we still want it as a string\n      return String(propValue);\n    } // redundant return here for better minification\n\n\n    return propValue;\n  } // not sure exactly what type we want\n  // so no need to change to a different type\n\n\n  return propValue;\n};\n\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\n\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n  // check our new property value against our internal value\n  const hostRef = getHostRef(ref);\n  const elm = hostRef.$hostElement$;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n\n  if (newVal !== oldVal && (!(flags & 8\n  /* isConstructingInstance */\n  ) || oldVal === undefined)) {\n    // gadzooks! the property's value has changed!!\n    // set our new value!\n    hostRef.$instanceValues$.set(propName, newVal);\n\n    if (instance) {\n      if ((flags & (2\n      /* hasRendered */\n      | 16\n      /* isQueuedForUpdate */\n      )) === 2\n      /* hasRendered */\n      ) {\n        // looks like this value actually changed, so we've got work to do!\n        // but only if we've already rendered, otherwise just chill out\n        // queue that we need to do an update, but don't worry about queuing\n        // up millions cuz this function ensures it only runs once\n        scheduleUpdate(elm, hostRef, cmpMeta, false);\n      }\n    }\n  }\n};\n\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n  if (cmpMeta.$members$) {\n    // It's better to have a const than two Object.entries()\n    const members = Object.entries(cmpMeta.$members$);\n    const prototype = Cstr.prototype;\n    members.forEach(([memberName, [memberFlags]]) => {\n      if (memberFlags & 31\n      /* Prop */\n      || flags & 2\n      /* proxyState */\n      && memberFlags & 32\n      /* State */\n      ) {\n        // proxyComponent - prop\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            // proxyComponent, get value\n            return getValue(this, memberName);\n          },\n\n          set(newValue) {\n            // proxyComponent, set value\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n\n          configurable: true,\n          enumerable: true\n        });\n      } else if (flags & 1\n      /* isElementConstructor */\n      && memberFlags & 64\n      /* Method */\n      ) {\n        // proxyComponent - method\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            const ref = getHostRef(this);\n            return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n          }\n\n        });\n      }\n    });\n\n    if (flags & 1\n    /* isElementConstructor */\n    ) {\n      const attrNameToPropName = new Map();\n\n      prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n        plt.jmp(() => {\n          const propName = attrNameToPropName.get(attrName);\n          this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n        });\n      }; // create an array of attributes to observe\n      // and also create a map of html attribute name to js property name\n\n\n      Cstr.observedAttributes = members.filter(([_, m]) => m[0] & 15\n      /* HasAttribute */\n      ) // filter to only keep props that should match attributes\n      .map(([propName, m]) => {\n        const attrName = m[1] || propName;\n        attrNameToPropName.set(attrName, propName);\n        return attrName;\n      });\n    }\n  }\n\n  return Cstr;\n};\n\nconst initializeComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (elm, hostRef, cmpMeta, hmrVersionId, Cstr) {\n    // initializeComponent\n    if ((hostRef.$flags$ & 32\n    /* hasInitializedComponent */\n    ) === 0) {\n      // we haven't initialized this element yet\n      hostRef.$flags$ |= 32\n      /* hasInitializedComponent */\n      ;\n      {\n        // lazy loaded components\n        // request the component's implementation to be\n        // wired up with the host element\n        Cstr = loadModule(cmpMeta);\n\n        if (Cstr.then) {\n          // Await creates a micro-task avoid if possible\n          const endLoad = uniqueTime();\n          Cstr = yield Cstr;\n          endLoad();\n        }\n\n        if (!Cstr.isProxied) {\n          proxyComponent(Cstr, cmpMeta, 2\n          /* proxyState */\n          );\n          Cstr.isProxied = true;\n        }\n\n        const endNewInstance = createTime('createInstance', cmpMeta.$tagName$); // ok, time to construct the instance\n        // but let's keep track of when we start and stop\n        // so that the getters/setters don't incorrectly step on data\n\n        {\n          hostRef.$flags$ |= 8\n          /* isConstructingInstance */\n          ;\n        } // construct the lazy-loaded component implementation\n        // passing the hostRef is very important during\n        // construction in order to directly wire together the\n        // host element and the lazy-loaded instance\n\n        try {\n          new Cstr(hostRef);\n        } catch (e) {\n          consoleError(e);\n        }\n\n        {\n          hostRef.$flags$ &= ~8\n          /* isConstructingInstance */\n          ;\n        }\n        endNewInstance();\n      }\n      const scopeId = getScopeId(cmpMeta.$tagName$);\n\n      if (!styles.has(scopeId) && Cstr.style) {\n        const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$); // this component has styles but we haven't registered them yet\n\n        let style = Cstr.style;\n\n        if (cmpMeta.$flags$ & 8\n        /* needsShadowDomShim */\n        ) {\n          style = yield import('./shadow-css-d7d058ec-d59cb009.js').then(m => m.scopeCss(style, scopeId, false));\n        }\n\n        registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1\n        /* shadowDomEncapsulation */\n        ));\n        endRegisterStyles();\n      }\n    } // we've successfully created a lazy instance\n\n\n    const ancestorComponent = hostRef.$ancestorComponent$;\n\n    const schedule = () => scheduleUpdate(elm, hostRef, cmpMeta, true);\n\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n      // this is the intial load and this component it has an ancestor component\n      // but the ancestor component has NOT fired its will update lifecycle yet\n      // so let's just cool our jets and wait for the ancestor to continue first\n      // this will get fired off when the ancestor component\n      // finally gets around to rendering its lazy self\n      // fire off the initial update\n      ancestorComponent['s-rc'].push(schedule);\n    } else {\n      schedule();\n    }\n  });\n\n  return function initializeComponent(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst connectedCallback = (elm, cmpMeta) => {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    const endConnected = createTime('connectedCallback', cmpMeta.$tagName$); // connectedCallback\n\n    const hostRef = getHostRef(elm);\n\n    if (cmpMeta.$listeners$) {\n      // initialize our event listeners on the host element\n      // we do this now so that we can listening to events that may\n      // have fired even before the instance is ready\n      hostRef.$rmListeners$ = addEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    }\n\n    if (!(hostRef.$flags$ & 1\n    /* hasConnected */\n    )) {\n      // first time this component has connected\n      hostRef.$flags$ |= 1\n      /* hasConnected */\n      ;\n      {\n        // find the first ancestor component (if there is one) and register\n        // this component as one of the actively loading child components for its ancestor\n        let ancestorComponent = elm;\n\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          // climb up the ancestors looking for the first\n          // component that hasn't finished its lifecycle update yet\n          if (ancestorComponent['s-p']) {\n            // we found this components first ancestor component\n            // keep a reference to this component's ancestor component\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      } // Lazy properties\n      // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n\n      if (cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).forEach(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31\n          /* Prop */\n          && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n\n      {\n        // connectedCallback, taskQueue, initialLoad\n        // angular sets attribute AFTER connectCallback\n        // https://github.com/angular/angular/issues/18909\n        // https://github.com/angular/angular/issues/19940\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      }\n    }\n\n    endConnected();\n  }\n};\n\nconst disconnectedCallback = elm => {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    const hostRef = getHostRef(elm);\n    const instance = hostRef.$lazyInstance$;\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$();\n        hostRef.$rmListeners$ = undefined;\n      }\n    } // clear CSS var-shim tracking\n\n    if (plt.$cssShim$) {\n      plt.$cssShim$.removeHost(elm);\n    }\n\n    {\n      safeCall(instance, 'componentDidUnload');\n    }\n  }\n};\n\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n  const endBootstrap = createTime();\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements = win.customElements;\n  const head = doc.head;\n  const metaCharset = /*@__PURE__*/head.querySelector('meta[charset]');\n  const visibilityStyle = /*@__PURE__*/doc.createElement('style');\n  const deferredConnectedCallbacks = [];\n  let appLoadFallback;\n  let isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n\n  if (options.syncQueue) {\n    plt.$flags$ |= 4\n    /* queueSync */\n    ;\n  }\n\n  lazyBundles.forEach(lazyBundle => lazyBundle[1].forEach(compactMeta => {\n    const cmpMeta = {\n      $flags$: compactMeta[0],\n      $tagName$: compactMeta[1],\n      $members$: compactMeta[2],\n      $listeners$: compactMeta[3]\n    };\n    {\n      cmpMeta.$members$ = compactMeta[2];\n    }\n    {\n      cmpMeta.$listeners$ = compactMeta[3];\n    }\n\n    if (!supportsShadowDom && cmpMeta.$flags$ & 1\n    /* shadowDomEncapsulation */\n    ) {\n      cmpMeta.$flags$ |= 8\n      /* needsShadowDomShim */\n      ;\n    }\n\n    const tagName = cmpMeta.$tagName$;\n    const HostElement = class extends HTMLElement {\n      // StencilLazyHost\n      constructor(self) {\n        // @ts-ignore\n        super(self);\n        self = this;\n        registerHost(self);\n\n        if (cmpMeta.$flags$ & 1\n        /* shadowDomEncapsulation */\n        ) {\n          // this component is using shadow dom\n          // and this browser supports shadow dom\n          // add the read-only property \"shadowRoot\" to the host element\n          // adding the shadow root build conditionals to minimize runtime\n          if (supportsShadowDom) {\n            {\n              self.attachShadow({\n                mode: 'open'\n              });\n            }\n          } else if (!('shadowRoot' in self)) {\n            self.shadowRoot = self;\n          }\n        }\n      }\n\n      connectedCallback() {\n        if (appLoadFallback) {\n          clearTimeout(appLoadFallback);\n          appLoadFallback = null;\n        }\n\n        if (isBootstrapping) {\n          // connectedCallback will be processed once all components have been registered\n          deferredConnectedCallbacks.push(this);\n        } else {\n          plt.jmp(() => connectedCallback(this, cmpMeta));\n        }\n      }\n\n      disconnectedCallback() {\n        plt.jmp(() => disconnectedCallback(this));\n      }\n\n      forceUpdate() {\n        forceUpdate(this, cmpMeta);\n      }\n\n      componentOnReady() {\n        return getHostRef(this).$onReadyPromise$;\n      }\n\n    };\n    cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n\n    if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n      cmpTags.push(tagName);\n      customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1\n      /* isElementConstructor */\n      ));\n    }\n  }));\n  {\n    visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n    visibilityStyle.setAttribute('data-styles', '');\n    head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n  } // Process deferred connectedCallbacks now all components have been registered\n\n  isBootstrapping = false;\n\n  if (deferredConnectedCallbacks.length > 0) {\n    deferredConnectedCallbacks.forEach(host => host.connectedCallback());\n  } else {\n    {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  } // Fallback appLoad event\n\n\n  endBootstrap();\n};\n\nconst createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: detail => {\n      const ev = new CustomEvent(name, {\n        bubbles: !!(flags & 4\n        /* Bubbles */\n        ),\n        composed: !!(flags & 2\n        /* Composed */\n        ),\n        cancelable: !!(flags & 1\n        /* Cancellable */\n        ),\n        detail\n      });\n      elm.dispatchEvent(ev);\n      return ev;\n    }\n  };\n};\n\nconst getAssetPath = path => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\n\nconst getContext = (_elm, context) => {\n  if (context in Context) {\n    return Context[context];\n  } else if (context === 'window') {\n    return win;\n  } else if (context === 'document') {\n    return doc;\n  } else if (context === 'isServer' || context === 'isPrerender') {\n    return false;\n  } else if (context === 'isClient') {\n    return true;\n  } else if (context === 'resourcesUrl' || context === 'publicPath') {\n    return getAssetPath('.');\n  } else if (context === 'queue') {\n    return {\n      write: writeTask,\n      read: readTask,\n      tick: {\n        then(cb) {\n          return nextTick(cb);\n        }\n\n      }\n    };\n  }\n\n  return undefined;\n};\n\nconst getElement = ref => getHostRef(ref).$hostElement$;\n\nexport { Host as H, patchEsm as a, bootstrapLazy as b, createEvent as c, getContext as d, getElement as g, h, patchBrowser as p, registerInstance as r };","map":{"version":3,"names":["NAMESPACE","queueCongestion","queuePending","scopeId","hostTagName","isSvgMode","win","window","CSS","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","supportsShadowDom","attachShadow","indexOf","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","e","Context","hostRefs","WeakMap","getHostRef","ref","get","registerInstance","lazyInstance","hostRef","set","$lazyInstance$","registerHost","elm","$hostElement$","$instanceValues$","Map","$onInstancePromise$","r","$onInstanceResolve$","$onReadyPromise$","$onReadyResolve$","isMemberInElement","memberName","consoleError","console","error","moduleCache","loadModule","cmpMeta","hmrVersionId","exportName","$tagName$","replace","bundleId","$lazyBundleIds$","module","then","importedModule","styles","queueDomReads","queueDomWrites","queueDomWritesLow","queueTask","queue","write","cb","push","nextTick","flush","consume","i","length","performance","now","consumeTimeout","timeout","ts","splice","Math","ceil","Infinity","readTask","writeTask","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","isComplexType","o","getDynamicImportFunction","namespace","patchEsm","supports","$cssShim$","__cssshim","patchBrowser","scriptElm","Array","from","querySelectorAll","find","s","RegExp","test","src","getAttribute","history","scrollRestoration","resourcesUrl","URL","location","href","patchDynamicImport","customElements","base","orgScriptElm","importFunctionName","Function","random","moduleMap","url","mod","script","createElement","type","crossOrigin","createObjectURL","Blob","onload","m","remove","appendChild","HYDRATED_CSS","createTime","fnName","tagName","uniqueTime","key","measureText","rootAppliedStyles","registerStyle","cssText","allowCS","style","addStyle","styleContainerNode","mode","hostElm","getScopeId","nodeType","appliedStyles","styleElm","Set","has","createHostStyle","newScopeId","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","attachStyles","endAttachStyles","shadowRoot","getRootNode","classList","nodeName","vnodeData","children","child","simple","lastSimple","vNodeChildren","walk","c","isArray","String","$text$","newVNode","classData","className","class","Object","keys","filter","k","join","vnode","$attrs$","$children$","tag","text","$tag$","$elm$","Host","isHost","node","setAccessor","oldValue","newValue","isSvg","flags","isProp","ln","toLowerCase","oldClasses","parseClassList","newClasses","prop","removeProperty","setProperty","slice","isComplex","n","removeAttribute","setAttribute","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","createElementNS","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","isSameVnode","patch","nextSibling","parentNode","vnode1","vnode2","oldVNode","oldChildren","newChildren","textContent","data","vNode","forEach","renderVdom","renderFnResults","$vnode$","rootVnode","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","isInitialLoad","endSchedule","$ancestorComponent$","instance","update","updateComponent","promise","$queuedListeners$","methodName","event","safeCall","endUpdate","rc","$modeName$","endRender","callRender","updateHost","childrenPromises","postUpdate","postUpdateComponent","all","render","endPostUpdate","addHydratedFlag","appDidLoad","forceUpdate","isConnected","who","documentElement","method","arg","thenFn","addEventListeners","listeners","removeFns","map","name","target","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","fn","ev","body","parsePropertyValue","propValue","propType","parseFloat","getValue","propName","setValue","newVal","oldVal","$members$","proxyComponent","Cstr","members","entries","prototype","memberFlags","defineProperty","configurable","enumerable","args","attrNameToPropName","attributeChangedCallback","attrName","_oldValue","observedAttributes","_","initializeComponent","endLoad","isProxied","endNewInstance","endRegisterStyles","scopeCss","schedule","connectedCallback","endConnected","$listeners$","$rmListeners$","hasOwnProperty","disconnectedCallback","removeHost","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","baseURI","syncQueue","lazyBundle","compactMeta","HostElement","HTMLElement","constructor","self","clearTimeout","componentOnReady","define","firstChild","setTimeout","createEvent","getElement","emit","detail","CustomEvent","bubbles","composed","cancelable","dispatchEvent","getAssetPath","path","assetUrl","origin","pathname","getContext","_elm","context","read","tick","H","a","b","d","g","p"],"sources":["C:/Users/yeray/Desktop/Modulo3/PMDM/PMDM03/PMDM03T1/pmdm03-ejemplo2022-main/node_modules/@ionic/pwa-elements/dist/esm/core-f86805ad.js"],"sourcesContent":["const NAMESPACE = 'ionicpwaelements';\n\nlet queueCongestion = 0;\nlet queuePending = false;\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst CSS =  win.CSS ;\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n};\nconst supportsShadowDom =   /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()  ;\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets =  /*@__PURE__*/ (() => {\n    try {\n        new CSSStyleSheet();\n        return true;\n    }\n    catch (e) { }\n    return false;\n})() ;\nconst Context = {};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nconst registerHost = (elm) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $instanceValues$: new Map()\n    };\n    {\n        hostRef.$onInstancePromise$ = new Promise(r => hostRef.$onInstanceResolve$ = r);\n    }\n    {\n        hostRef.$onReadyPromise$ = new Promise(r => hostRef.$onReadyResolve$ = r);\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e) => console.error(e);\nconst moduleCache = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = ( cmpMeta.$lazyBundleIds$);\n    const module =  moduleCache.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${ ''}`).then(importedModule => {\n        {\n            moduleCache.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst consumeTimeout = (queue, timeout) => {\n    let i = 0;\n    let ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nconst flush = () => {\n    queueCongestion++;\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */\n        ? performance.now() + (10 * Math.ceil(queueCongestion * (1.0 / 22.0)))\n        : Infinity;\n    // DOM WRITES!!!\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n        queueDomWritesLow.push(...queueDomWrites);\n        queueDomWrites.length = 0;\n    }\n    if (queuePending = ((queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length) > 0)) {\n        // still more to do yet, but we've run out of time\n        // let's let this thing cool off and try again in the next tick\n        plt.raf(flush);\n    }\n    else {\n        queueCongestion = 0;\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchEsm = () => {\n    // @ts-ignore\n    if ( !(CSS && CSS.supports && CSS.supports('color', 'var(--c)'))) {\n        // @ts-ignore\n        return import(/* webpackChunkName: \"stencil-polyfills-css-shim\" */ './css-shim-8775d9ad-556f0cc2.js').then(() => {\n            if (plt.$cssShim$ = win.__cssshim) {\n                return plt.$cssShim$.i();\n            }\n            else {\n                // for better minification\n                return 0;\n            }\n        });\n    }\n    return promiseResolve();\n};\nconst patchBrowser = () => {\n    {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    // @ts-ignore\n    const scriptElm = \n        Array.from(doc.querySelectorAll('script')).find(s => (new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)) ;\n    const opts =  {};\n    if ( 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return { then() { } };\n    }\n    {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        patchDynamicImport(opts.resourcesUrl, scriptElm);\n        if ( !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"stencil-polyfills-dom\" */ './dom-76cc7c7d-0a082895.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/v8/issues/detail?id=9558 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], { type: 'application/javascript' }));\n                mod = new Promise(resolve => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => { return; };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => { return; };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId =  getScopeId(cmpMeta.$tagName$);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = (styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc);\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    if ( plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */));\n                        const newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if ( !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (elm, cmpMeta, mode) => {\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(( supportsShadowDom && elm.shadowRoot)\n        ? elm.shadowRoot\n        : elm.getRootNode(), cmpMeta, mode, elm);\n    if ( cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (tagName, mode) => 'sc-' + ( tagName);\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class = typeof classData !== 'object'\n                    ? classData\n                    : Object.keys(classData)\n                        .filter(k => classData[k])\n                        .join(' ');\n            }\n        }\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if ( memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n        }\n        else if ( memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if ( prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if ( prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if ( memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if (\n            ( !isProp\n                ) &&\n            memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            if (newValue == null || newValue === false) {\n                {\n                    elm.removeAttribute(memberName);\n                }\n            }\n            else if ((!isProp || (flags & 4 /* isHost */) || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value) ? [] : value.split(parseClassListRegex);\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = (newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host) ? newVnode.$elm$.host : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if ( newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        if ( !isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = ( doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS,  newVNode.$tag$)\n            );\n        if ( isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ( isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    return elm;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ( parentElm);\n    let childNode;\n    if ( containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode,  before);\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnode = vnodes[startIdx]) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, (newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$), newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if ( newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        return true;\n    }\n    return false;\n};\nconst patch = (oldVNode, newVNode) => {\n    const elm = newVNode.$elm$ = oldVNode.$elm$;\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if ( text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = (tag === 'svg')\n                ? true\n                : (tag === 'foreignObject')\n                    ? false\n                    : isSvgMode;\n        }\n        // element node\n        {\n            {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if ( oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if ( oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if ( oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if ( isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if ( oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst callNodeRefs = (vNode) => {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.forEach(callNodeRefs);\n    }\n};\nconst renderVdom = (hostElm, hostRef, cmpMeta, renderFnResults) => {\n    hostTagName = hostElm.tagName;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults)\n        ? renderFnResults\n        : h(null, null, renderFnResults);\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = ( hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if ( ancestorComponent && !hostRef.$onRenderResolve$) {\n        ancestorComponent['s-p'].push(new Promise(r => hostRef.$onRenderResolve$ = r));\n    }\n};\nconst scheduleUpdate = (elm, hostRef, cmpMeta, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if ( hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    const endSchedule = createTime('scheduleUpdate', cmpMeta.$tagName$);\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const instance =  hostRef.$lazyInstance$ ;\n    const update = () => updateComponent(elm, hostRef, cmpMeta, instance, isInitialLoad);\n    attachToAncestor(hostRef, ancestorComponent);\n    let promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.forEach(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n    }\n    endSchedule();\n    // there is no ancestorc omponent or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    return then(promise,  () => writeTask(update)\n        );\n};\nconst updateComponent = (elm, hostRef, cmpMeta, instance, isInitialLoad) => {\n    // updateComponent\n    const endUpdate = createTime('update', cmpMeta.$tagName$);\n    const rc = elm['s-rc'];\n    if ( isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(elm, cmpMeta, hostRef.$modeName$);\n    }\n    const endRender = createTime('render', cmpMeta.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            renderVdom(elm, hostRef, cmpMeta, callRender(instance));\n        }\n    }\n    if ( plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    {\n        hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    {\n        hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if ( rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.forEach(cb => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(elm, hostRef, cmpMeta);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (instance, elm) => {\n    try {\n        instance =  instance.render() ;\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nconst postUpdateComponent = (elm, hostRef, cmpMeta) => {\n    const endPostUpdate = createTime('postUpdate', cmpMeta.$tagName$);\n    const instance =  hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(elm, hostRef, cmpMeta, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (elm, cmpMeta) => {\n    {\n        const hostRef = getHostRef(elm);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n            scheduleUpdate(elm, hostRef, cmpMeta, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    {\n        plt.$flags$ |= 2 /* appLoaded */;\n    }\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => \n    elm.classList.add('hydrated') ;\nconst addEventListeners = (elm, hostRef, listeners) => {\n    hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || [];\n    const removeFns = listeners.map(([flags, name, method]) => {\n        const target = ( getHostListenerTarget(elm, flags) );\n        const handler = hostListenerProxy(hostRef, method);\n        const opts = hostListenerOpts(flags);\n        plt.ael(target, name, handler, opts);\n        return () => plt.rel(target, name, handler, opts);\n    });\n    return () => removeFns.forEach(fn => fn());\n};\nconst hostListenerProxy = (hostRef, methodName) => {\n    return (ev) => {\n        {\n            if (hostRef.$flags$ & 256 /* isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                hostRef.$queuedListeners$.push([methodName, ev]);\n            }\n        }\n    };\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if ( flags & 32 /* TargetBody */)\n        return doc.body;\n    return elm;\n};\nconst hostListenerOpts = (flags) =>  (flags & 2 /* Capture */) !== 0;\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if ( propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return (propValue === 'false' ? false : propValue === '' || !!propValue);\n        }\n        if ( propType & 2 /* Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if ( propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm =  hostRef.$hostElement$ ;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance =  hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if (newVal !== oldVal && ( !(flags & 8 /* isConstructingInstance */) || oldVal === undefined)) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if ( instance) {\n            if ( (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(elm, hostRef, cmpMeta, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if ( cmpMeta.$members$) {\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.forEach(([memberName, [memberFlags]]) => {\n            if ( ((memberFlags & 31 /* Prop */) ||\n                (( flags & 2 /* proxyState */) &&\n                    (memberFlags & 32 /* State */)))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true\n                });\n            }\n            else if ( (flags & 1 /* isElementConstructor */) && (memberFlags & 64 /* Method */)) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        const ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n                    }\n                });\n            }\n        });\n        if ( ( flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean'\n                        ? false\n                        : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ( (hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        // we haven't initialized this element yet\n        hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n        {\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ( !Cstr.isProxied) {\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            endNewInstance();\n        }\n        const scopeId =  getScopeId(cmpMeta.$tagName$);\n        if ( !styles.has(scopeId) && Cstr.style) {\n            const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if ( cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n                style = await import('./shadow-css-d7d058ec-d59cb009.js').then(m => m.scopeCss(style, scopeId, false));\n            }\n            registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n            endRegisterStyles();\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(elm, hostRef, cmpMeta, true);\n    if ( ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the intial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst connectedCallback = (elm, cmpMeta) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        // connectedCallback\n        const hostRef = getHostRef(elm);\n        if ( cmpMeta.$listeners$) {\n            // initialize our event listeners on the host element\n            // we do this now so that we can listening to events that may\n            // have fired even before the instance is ready\n            hostRef.$rmListeners$ = addEventListeners(elm, hostRef, cmpMeta.$listeners$);\n        }\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = (ancestorComponent.parentNode || ancestorComponent.host))) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (\n                        (ancestorComponent['s-p'])) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if ( cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).forEach(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const instance =  hostRef.$lazyInstance$ ;\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$();\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if ( plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n        {\n            safeCall(instance, 'componentDidUnload');\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    if (options.syncQueue) {\n        plt.$flags$ |= 4 /* queueSync */;\n    }\n    lazyBundles.forEach(lazyBundle => lazyBundle[1].forEach(compactMeta => {\n        const cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$listeners$ = compactMeta[3];\n        }\n        if ( !supportsShadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n        }\n        const tagName = cmpMeta.$tagName$;\n        const HostElement = class extends HTMLElement {\n            // StencilLazyHost\n            constructor(self) {\n                // @ts-ignore\n                super(self);\n                self = this;\n                registerHost(self);\n                if ( cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    if (supportsShadowDom) {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                    else if ( !('shadowRoot' in self)) {\n                        self.shadowRoot = self;\n                    }\n                }\n            }\n            connectedCallback() {\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(() => connectedCallback(this, cmpMeta));\n                }\n            }\n            disconnectedCallback() {\n                plt.jmp(() => disconnectedCallback(this));\n            }\n            forceUpdate() {\n                forceUpdate(this, cmpMeta);\n            }\n            componentOnReady() {\n                return getHostRef(this).$onReadyPromise$;\n            }\n        };\n        cmpMeta.$lazyBundleIds$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }));\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length > 0) {\n        deferredConnectedCallbacks.forEach(host => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            const ev = new ( CustomEvent)(name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail\n            });\n            elm.dispatchEvent(ev);\n            return ev;\n        }\n    };\n};\nconst getAssetPath = (path) => {\n    const assetUrl = new URL(path, plt.$resourcesUrl$);\n    return (assetUrl.origin !== win.location.origin)\n        ? assetUrl.href\n        : assetUrl.pathname;\n};\nconst getContext = (_elm, context) => {\n    if (context in Context) {\n        return Context[context];\n    }\n    else if (context === 'window') {\n        return win;\n    }\n    else if (context === 'document') {\n        return doc;\n    }\n    else if (context === 'isServer' || context === 'isPrerender') {\n        return  false;\n    }\n    else if (context === 'isClient') {\n        return  true;\n    }\n    else if (context === 'resourcesUrl' || context === 'publicPath') {\n        return getAssetPath('.');\n    }\n    else if (context === 'queue') {\n        return {\n            write: writeTask,\n            read: readTask,\n            tick: {\n                then(cb) {\n                    return nextTick(cb);\n                }\n            }\n        };\n    }\n    return undefined;\n};\nconst getElement = (ref) =>  getHostRef(ref).$hostElement$ ;\n\nexport { Host as H, patchEsm as a, bootstrapLazy as b, createEvent as c, getContext as d, getElement as g, h, patchBrowser as p, registerInstance as r };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  static defaults = {};\n  static datasetElementType = null;\n  static dataElementType = null;\n\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {\n  inflateAmount\n}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  static id = 'bar';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nclass BubbleController extends DatasetController {\n  static id = 'bubble';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  static id = 'doughnut';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  static descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nclass LineController extends DatasetController {\n  static id = 'line';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nclass PolarAreaController extends DatasetController {\n  static id = 'polarArea';\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nclass PieController extends DoughnutController {\n  static id = 'pie';\n  static defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n}\n\nclass RadarController extends DatasetController {\n  static id = 'radar';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  static overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nclass ScatterController extends DatasetController {\n  static id = 'scatter';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  static overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  constructor(options) {\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse() {\n    return abstract();\n  }\n\n  format() {\n    return abstract();\n  }\n\n  add() {\n    return abstract();\n  }\n\n  diff() {\n    return abstract();\n  }\n\n  startOf() {\n    return abstract();\n  }\n\n  endOf() {\n    return abstract();\n  }\n\n}\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height1 = chartArea.h * weight;\n      const width1 = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n      }\n\n      stack.start = x;\n      stack.placed += height1;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  static defaults = {};\n  static defaultRoutes = undefined;\n  active = false;\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID1 = Object.keys(position)[0];\n      const value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret1 = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret1.textAlign;\n      x = ret1.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = /* #__PURE__ */new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i1 = 0; i1 < local.length; i1++) {\n    const plugin = local[i1];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, {\n  plugins,\n  localIds\n}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {\n  plugin,\n  local\n}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.0.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n      this._updateDataset(i1, isFunction(mode) ? mode({\n        datasetIndex: i1\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\n\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nclass ArcElement extends Element {\n  static id = 'arc';\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n\n}\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  static id = 'line';\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  static descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  static id = 'point';\n  /**\n  * @type {any}\n  */\n\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  /**\n  * @type {any}\n  */\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  static id = 'bar';\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset, i) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true\n  },\n\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {\n        elements\n      },\n      data: {\n        datasets\n      }\n    } = chart.config;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox1 of hitboxes) {\n        if (hitbox1.col !== col) {\n          col = hitbox1.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox1.top = top;\n        hitbox1.left += this.left + padding;\n        hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n        top += hitbox1.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  beforeTitle: noop,\n\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    const value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nclass Tooltip extends Element {\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', { ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nclass CategoryScale extends Scale {\n  static id = 'category';\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  static id = 'linear';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nconst log10Floor = v => Math.floor(log10(v));\n\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, {\n  min,\n  max\n}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  static id = 'logarithmic';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  static id = 'radialLinear';\n  static defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  static id = 'time';\n  static defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      callback: false,\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  static id = 'timeseries';\n  static defaults = TimeScale.defaults;\n\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nvar TimeSeriesScale$1 = TimeSeriesScale;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale$1\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","d","defaults","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","createContext","k","isNullOrUndef","_","_arrayUnique","t","toRadians","T","TAU","m","toPercentage","n","toDimension","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","getRelativePosition","A","_rlookupByKey","B","_lookupByKey","C","_isPointInArea","D","getAngleFromPoint","E","toPadding","F","each","G","getMaximumSize","I","_getParentNode","J","readUsedSize","K","supportsEventListenerOptions","L","throttled","M","_isDomSupported","N","_factorize","O","finiteOrDefault","Q","callback","R","_addGrace","S","_limitValue","U","toDegrees","V","_measureText","W","_int16Range","X","_alignPixel","Y","clipArea","Z","renderText","$","unclipArea","a0","toFont","a1","_toLeftRightCenter","a2","_alignStartEnd","a3","overrides","a4","merge","a5","_capitalize","a6","descriptors","a7","isFunction","a8","_attachContext","a9","_createResolver","aa","_descriptors","ab","mergeIf","ac","uid","ad","debounce","ae","retinaScale","af","clearCanvas","ag","setsEqual","ah","_elementsEqual","ai","_isClickEvent","aj","_isBetween","ak","_readValueToProps","al","_updateBezierControlPoints","am","_computeSegments","an","_boundSegments","ao","_steppedInterpolation","ap","_bezierInterpolation","aq","_pointInLine","ar","_steppedLineTo","as","_bezierCurveTo","at","drawPoint","au","addRoundedRectPath","av","toTRBL","aw","toTRBLCorners","ax","_boundSegment","ay","_normalizeAngle","az","getRtlAdapter","aA","overrideTextDirection","aB","_textX","aC","restoreTextDirection","aD","drawPointLegend","aE","distanceBetweenPoints","aF","noop","aG","_setMinAndMaxByKey","aH","niceNum","aI","almostWhole","aJ","almostEquals","aK","_decimalPlaces","aL","Ticks","aM","log10","aN","_longestText","aO","_filterBetween","aP","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","new","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","__proto__","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","height1","width1","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","i1","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","Chart$1","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","createDefaultDatasetColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","containsColorsDefinitions","plugin_colors","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","hitbox1","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","formatters","numeric","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","TimeSeriesScale$1","registerables","_adapters"],"sources":["C:/Users/yeray/Desktop/pmdm03-ejemplo2022-main/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
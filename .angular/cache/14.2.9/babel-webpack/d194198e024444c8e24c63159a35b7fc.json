{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yeray/Desktop/Modulo3/PMDM/PMDM03/PMDM03T1/pmdm03-ejemplo2022-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin, CapacitorException } from '@capacitor/core';\nimport { CameraSource, CameraDirection } from './definitions';\nexport class CameraWeb extends WebPlugin {\n  getPhoto(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // eslint-disable-next-line no-async-promise-executor\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resolve, reject) {\n          if (options.webUseInput || options.source === CameraSource.Photos) {\n            _this.fileInputExperience(options, resolve);\n          } else if (options.source === CameraSource.Prompt) {\n            let actionSheet = document.querySelector('pwa-action-sheet');\n\n            if (!actionSheet) {\n              actionSheet = document.createElement('pwa-action-sheet');\n              document.body.appendChild(actionSheet);\n            }\n\n            actionSheet.header = options.promptLabelHeader || 'Photo';\n            actionSheet.cancelable = false;\n            actionSheet.options = [{\n              title: options.promptLabelPhoto || 'From Photos'\n            }, {\n              title: options.promptLabelPicture || 'Take Picture'\n            }];\n            actionSheet.addEventListener('onSelection', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(function* (e) {\n                const selection = e.detail;\n\n                if (selection === 0) {\n                  _this.fileInputExperience(options, resolve);\n                } else {\n                  _this.cameraExperience(options, resolve, reject);\n                }\n              });\n\n              return function (_x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          } else {\n            _this.cameraExperience(options, resolve, reject);\n          }\n        });\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  pickImages(_options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      // eslint-disable-next-line no-async-promise-executor\n      return new Promise( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (resolve) {\n          _this2.multipleFileInputExperience(resolve);\n        });\n\n        return function (_x4) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  cameraExperience(options, resolve, reject) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (customElements.get('pwa-camera-modal')) {\n        const cameraModal = document.createElement('pwa-camera-modal');\n        cameraModal.facingMode = options.direction === CameraDirection.Front ? 'user' : 'environment';\n        document.body.appendChild(cameraModal);\n\n        try {\n          yield cameraModal.componentOnReady();\n          cameraModal.addEventListener('onPhoto', /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator(function* (e) {\n              const photo = e.detail;\n\n              if (photo === null) {\n                reject(new CapacitorException('User cancelled photos app'));\n              } else if (photo instanceof Error) {\n                reject(photo);\n              } else {\n                resolve(yield _this3._getCameraPhoto(photo, options));\n              }\n\n              cameraModal.dismiss();\n              document.body.removeChild(cameraModal);\n            });\n\n            return function (_x5) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n          cameraModal.present();\n        } catch (e) {\n          _this3.fileInputExperience(options, resolve);\n        }\n      } else {\n        console.error(`Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/web/pwa-elements.`);\n\n        _this3.fileInputExperience(options, resolve);\n      }\n    })();\n  }\n\n  fileInputExperience(options, resolve) {\n    let input = document.querySelector('#_capacitor-camera-input');\n\n    const cleanup = () => {\n      var _a;\n\n      (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input');\n      input.id = '_capacitor-camera-input';\n      input.type = 'file';\n      input.hidden = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', _e => {\n        const file = input.files[0];\n        let format = 'jpeg';\n\n        if (file.type === 'image/png') {\n          format = 'png';\n        } else if (file.type === 'image/gif') {\n          format = 'gif';\n        }\n\n        if (options.resultType === 'dataUrl' || options.resultType === 'base64') {\n          const reader = new FileReader();\n          reader.addEventListener('load', () => {\n            if (options.resultType === 'dataUrl') {\n              resolve({\n                dataUrl: reader.result,\n                format\n              });\n            } else if (options.resultType === 'base64') {\n              const b64 = reader.result.split(',')[1];\n              resolve({\n                base64String: b64,\n                format\n              });\n            }\n\n            cleanup();\n          });\n          reader.readAsDataURL(file);\n        } else {\n          resolve({\n            webPath: URL.createObjectURL(file),\n            format: format\n          });\n          cleanup();\n        }\n      });\n    }\n\n    input.accept = 'image/*';\n    input.capture = true;\n\n    if (options.source === CameraSource.Photos || options.source === CameraSource.Prompt) {\n      input.removeAttribute('capture');\n    } else if (options.direction === CameraDirection.Front) {\n      input.capture = 'user';\n    } else if (options.direction === CameraDirection.Rear) {\n      input.capture = 'environment';\n    }\n\n    input.click();\n  }\n\n  multipleFileInputExperience(resolve) {\n    let input = document.querySelector('#_capacitor-camera-input-multiple');\n\n    const cleanup = () => {\n      var _a;\n\n      (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input');\n      input.id = '_capacitor-camera-input-multiple';\n      input.type = 'file';\n      input.hidden = true;\n      input.multiple = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', _e => {\n        const photos = []; // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n        for (let i = 0; i < input.files.length; i++) {\n          const file = input.files[i];\n          let format = 'jpeg';\n\n          if (file.type === 'image/png') {\n            format = 'png';\n          } else if (file.type === 'image/gif') {\n            format = 'gif';\n          }\n\n          photos.push({\n            webPath: URL.createObjectURL(file),\n            format: format\n          });\n        }\n\n        resolve({\n          photos\n        });\n        cleanup();\n      });\n    }\n\n    input.accept = 'image/*';\n    input.click();\n  }\n\n  _getCameraPhoto(photo, options) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      const format = photo.type.split('/')[1];\n\n      if (options.resultType === 'uri') {\n        resolve({\n          webPath: URL.createObjectURL(photo),\n          format: format,\n          saved: false\n        });\n      } else {\n        reader.readAsDataURL(photo);\n\n        reader.onloadend = () => {\n          const r = reader.result;\n\n          if (options.resultType === 'dataUrl') {\n            resolve({\n              dataUrl: r,\n              format: format,\n              saved: false\n            });\n          } else {\n            resolve({\n              base64String: r.split(',')[1],\n              format: format,\n              saved: false\n            });\n          }\n        };\n\n        reader.onerror = e => {\n          reject(e);\n        };\n      }\n    });\n  }\n\n  checkPermissions() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (typeof navigator === 'undefined' || !navigator.permissions) {\n        throw _this4.unavailable('Permissions API not available in this browser');\n      }\n\n      try {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n        // the specific permissions that are supported varies among browsers that implement the\n        // permissions API, so we need a try/catch in case 'camera' is invalid\n        const permission = yield window.navigator.permissions.query({\n          name: 'camera'\n        });\n        return {\n          camera: permission.state,\n          photos: 'granted'\n        };\n      } catch (_a) {\n        throw _this4.unavailable('Camera permissions are not available in this browser');\n      }\n    })();\n  }\n\n  requestPermissions() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this5.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  pickLimitedLibraryPhotos() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this6.unavailable('Not implemented on web.');\n    })();\n  }\n\n  getLimitedLibraryPhotos() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this7.unavailable('Not implemented on web.');\n    })();\n  }\n\n}\nconst Camera = new CameraWeb();\nexport { Camera }; //# sourceMappingURL=web.js.map","map":null,"metadata":{},"sourceType":"module"}